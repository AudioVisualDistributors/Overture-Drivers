let host
exports.init = _host => {
  host = _host
}

exports.createDevice = base => {
  const logger = base.logger || host.logger
  let config
  let tcpClient

  const setup = _config => {
    config = _config
     base.setPoll('Get Power', 5000)
  }

  const start = () => {
    initTcpClient()
    tcpClient.connect(config.port, config.host)
    base.startPolling()
  }

  const stop = () => {
    disconnect()
  }

  var Power_command = {
    OFF: "1,37000,1,1,127,65,16,16,16,48,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,48,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,48,16,16,16,48,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,48,16,48,16,48,16,48,16,48,16,48,16,16,16,16,16,48,16,48,16,48,16,48,16,16,16,16,16,16,16,48,16,2731",
    ON: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,47,16,47,16,47,16,16,16,16,16,16,16,47,16,47,16,47,16,16,16,16,16,16,16,47,16,2741"
  }

  var Control_command = {
    UP: "1,37000,1,1,132,64,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,49,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,49,16,16,16,16,16,16,16,16,16,49,16,49,16,16,16,49,16,16,16,49,16,49,16,16,16,16,16,2704",
    DOWN: "1,37000,1,1,132,64,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,49,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,49,16,16,16,16,16,16,16,16,16,49,16,16,16,49,16,49,16,16,16,49,16,49,16,16,16,16,16,2703",
    LEFT: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,47,16,16,16,16,16,16,16,16,16,47,16,47,16,47,16,47,16,16,16,47,16,47,16,16,16,16,16,2741",
    RIGHT: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,47,16,47,16,47,16,16,16,16,16,2741",
    OK: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,16,16,16,16,47,16,47,16,16,16,16,16,2741",
    RETURN: "1,37000,1,1,128,62,15,15,15,47,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,47,15,15,15,15,15,15,15,15,15,15,15,15,15,47,15,47,15,15,15,47,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,47,15,15,15,15,15,15,15,15,15,15,15,15,15,47,15,47,15,15,15,15,15,15,15,47,15,47,15,15,15,15,15,2736",
    EJECT: "1,37000,1,1,127,65,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,49,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,49,16,16,16,16,16,16,16,49,16,49,16,17,16,49,16,2731"

  }

  var Track_command = {
    FORWARD: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,16,16,47,16,47,16,16,16,47,16,2741",
    REVERSE: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,47,16,16,16,47,16,2741",
    STOP: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,2741",
    PLAY: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,47,16,47,16,16,16,47,16,2741",
    PREVIOUS: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,47,16,16,16,16,16,47,16,16,16,47,16,16,16,16,16,47,16,47,16,47,16,47,16,47,16,2741",
    NEXT: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,47,16,16,16,16,16,47,16,16,16,16,16,47,16,16,16,47,16,47,16,47,16,47,16,47,16,2741",
    PAUSE: "1,37000,1,1,127,63,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,16,16,16,16,16,16,16,16,16,16,47,16,47,16,16,16,47,16,47,16,16,16,47,16,2741"
  }

  const setPower = params => {
    base.getVar("Power").string = params.Status;
    let ircode = Power_command[params.Name.toUpperCase()]
    `sendir,${config.module}:${config.ir_port},${ircode}\r`
  }

  const setPower = params => {
    base.getVar("Power").string = params.Status;
    let ircode = Power_command[params.Name.toUpperCase()]
    if (ircode) sendDefer(`sendir,${config.module}:${config.ir_port},${ircode}\r`)
    else logger.debug("Wrong command variable sent to Set Power()")
  }

  const sendCommand = params => {
    base.getVar("Commands").string = params.Name;
    let ircode = Control_command[params.Name.toUpperCase()]
    if (ircode) sendDefer(`sendir,${config.module}:${config.ir_port},${ircode}\r`)
    else logger.debug("Wrong command variable sent to function Send Command()")
  }

  const sendTrackCommand = params => {
    base.getVar("Track").string = params.Name;
    let ircode = Power_command[params.Name.toUpperCase()]
    if (ircode) sendDefer(`sendir,${config.module}:${config.ir_port},${ircode}\r`)
    else logger.debug("Wrong command variable sent to function Send Track Command()")
  }

  const getPower = () => sendDefer("A")

  const onFrame = data => {
    logger.silly(`onFrame ${data}`)
    base.commandDone()
  }

  const initTcpClient = () => {
    if (!tcpClient) {
      tcpClient = host.createTCPClient()

      tcpClient.on('connect', () => {
        logger.silly(`TCPClient connected`)
        base.getVar('Status').string = 'Connected'
      })

      tcpClient.on('data', data => {
        data = data.toString()
        logger.silly(`TCPClient data: ${data}`)
        onFrame(data)
      })

      tcpClient.on('close', () => {
        logger.silly(`TCPClient closed`)
        disconnect()
      })

      tcpClient.on('error', err => {
        logger.error(`TCPClient: ${err}`)
        disconnect()
      })
    }
  }

  const sendDefer = data => {
    if (send(data)) {
      base.commandDefer()
    } else {
      base.commandError(`Data not sent`)
    }
  }

  const send = data => {
    logger.silly(`TCPClient send: ${data}`)
    return tcpClient && tcpClient.write(data)
  }

  const disconnect = () => {
    //base.getVar('Status').string = 'Disconnected'
    //tcpClient && tcpClient.end()
  }

  return {
    setup, start, stop,
    setPower, getPower, sendTrackCommand, sendCommand
  }
}